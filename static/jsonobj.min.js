
//$.get("/containers").success(function(data){alert(data);}).error(function(data, s){alert(s); alert(data);});

// it will get the data from  backend and create the initial table
var value="empty";
function getdata(){
$.get("/containers").success(function(data){
	
	
	buildHtmlTable(data);
	eventfire();
	down();
	del();
 })
}

// Builds the HTML Table out of myList json data from Ivy restful service.
 function buildHtmlTable(myList) {
	 
     var columns = addAllColumnHeaders(myList);
     for (var i = 0 ; i < myList.length ; i++) {
         var row$ = $('<tr/>');
         for (var colIndex = 0 ; colIndex < columns.length ; colIndex++) {
             var cellValue = myList[i][columns[colIndex]];
 
             if (cellValue == null) { cellValue = ""; }
 
             row$.append($('<td/>').html(cellValue));
         }
         $("#excelDataTable").append(row$);
     }
     
 }
 
 // Adds a header row to the table and returns the set of columns.
 // Need to do union of keys from all records as some records may not contain
 // all records
 function addAllColumnHeaders(myList)
 {
     var columnSet = [];
     var headerTr$ = $('<tr/>');
 
     for (var i = 0 ; i < myList.length ; i++) {
         var rowHash = myList[i];
         for (var key in rowHash) {
             if ($.inArray(key, columnSet) == -1){
                 columnSet.push(key);
                 headerTr$.append($('<th/>').html(key));
             }
         }
     }
     $("#excelDataTable").append(headerTr$);
 
     return columnSet;
 }
 
 
 
//for selecting  the Name element of a selected row. Need it for passing container name.
 function eventfire() { 
$("#excelDataTable tr").click(function(){
	 $(this).addClass('selected').siblings().removeClass('selected');    
	  value=$(this).find('td:eq(2)').html();
	 alert(value); 
	 $.get( "/cotainername", {suggest: value}).success(function(data) {
		 deltable(data);

		});	    
    });
}
 /// event for selecting rows in file table
 function eventfirefile() { 
	 $("#excelDataTable tr").click(function(){
		 
	 	 $(this).addClass('selected').siblings().removeClass('selected');    
	 	// var value=$(this).find('td:eq(4)').html();	    
	 	 
	     });
	 }
 
 /////////////////////////////////////////////////////////////////////////////////
 
 //click ok button to  pass value 
 function down(){
	$('.download').on('click', function(e){
		
	  var filename = $("#excelDataTable tr.selected td:eq(4)").html(); 	
	  alert(filename); 
	  var url = "/downloadfile/" + value + "/" + encodeURIComponent(filename);
	  window.location.replace(url); 
	  
//	  $.get( "/downloadfile/" + value + "/" + filename).success(function(data) {
//		  //$.get( "/downloadfile/", {suggest : value,files: filename}).success(function(data) {  
////		  var contentype = data.getResponseHeader('Content-Type');
////		  if (content_type == "application/octet-stream" )
////          {
//		      //var url = "/downloadfile/" + $.param({"suggest": value, "files" : filename})
//			  //$("body").append("<iframe src='" + url+ "' style='display: none;' ></iframe>"); 
//			  alert("download successfully"); 
//			  alert(url);
//			  alert(data);
////          }
//		 
//		   
//		});	 
  });
}
///////////////////////////////////////////////////////////////////////

 function del(){
	$('.delete').on('click', function(e){
		  var filename = $("#excelDataTable tr.selected td:eq(4)").html(); 	
		  alert(filename); 
//		 	 $.delete( "/deletefile", {suggest : value,files: filename}).success(function(data) {
//	 		
//		 		 alert("deleted successfully");
//	 		});	
		  
		  $.ajax({
			    url: "/deletefile" + '?' + $.param({"suggest": value, "files" : filename}),
			    type: 'DELETE',
			    success: function (data) {
			        alert("deleted successfully");
			        
//			        $.get( "/cotainername", {suggest : value,files: filename}).success(function(data) {
//			   		 deltable(data);
			     }
			   
			});
	
		});
 }
//#######################################remove table##################################
function deltable(list){
	//alert("got here");
	 $('#excelDataTable tr').remove(buildHtmlTable(list));
	 eventfirefile();
};



